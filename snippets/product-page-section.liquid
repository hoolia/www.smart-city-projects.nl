<!--Product Details Area Start-->
{% assign current_variant = product.selected_or_first_available_variant %}
{% assign enable_zoom = true %}
{% assign product_img_size = settings.img_size_product %}
{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
{% assign on_sale = true %}
{% endif %}
<div class="container" id="product-product" itemscope itemtype="http://schema.org/Product">
  {% include 'product-schema-meta' %}
  <div class="row">
    <div id="content" class="col-sm-12 ">
      <div class="row cstm_clss">
        {% case section.settings.product_page_layout %}
        {% when 'horizontal_thumbs' %}
        {% include 'product-horizontal-slider-alt' %}
        {% when 'vertical_thumbs' %}
        {% include 'product-vertical-slider', thumb: 'left' %}
        {% when 'vertical_thumbs_right' %}
        {% include 'product-vertical-slider', thumb: 'right' %}
        {% when 'sticky_layout' %}
        {% include 'product-sticky' %}
        {% when 'horizontal_slide_full' %}
        {% include 'product-horizontal-slide-full' %}
        {% when 'horizontal_slide_grid' %}
        {% include 'product-horizontal-slide-grid' %}
        {% else %}
        {% include 'product-horizontal-slider-alt' %}
        {% endcase %}
      </div>
    </div>
  </div>
  <div class="product-info-detailed">
    {% if section.settings.product_description_layout == 'tab' %}
    {% if section.settings.show_description_tab %}
    <ul class="nav nav-tabs">
      <li role="presentation" class="active">
        <a href="#description" aria-controls="description" role="tab" data-toggle="tab">{{ 'products.product.description' | t }}</a>
      </li>
      {% if section.settings.show_reviews_tab %}
      <li role="presentation" class="reviews"><a href="#reviews" aria-controls="reviews" role="tab" data-toggle="tab">{{ 'products.product.reviews' | t }}</a></li>
      {% endif %}
      {% if section.settings.show_third_tab %}
      <li role="presentation"><a href="#data" aria-controls="data" role="tab" data-toggle="tab">{{ section.settings.third_tab_title }}</a></li>
      {% endif %}
      {% if section.settings.show_tags_tab %}
      <li role="presentation">
        <a href="#tags" aria-controls="tags" role="tab" data-toggle="tab">{{ 'products.product.tags' | t }}</a>
      </li>
      {% endif %}
      {% if product.description contains '[tab]' %}
      <li role="presentation">
        <a href="#tab" aria-controls="tab" role="tab" data-toggle="tab">{{ section.settings.custom_tab_title }}</a>
      </li>
      {% endif %}
    </ul>
    {% endif %}
    {% endif %}
    {% if section.settings.show_description_tab %}
    <div class="tab-content">
      <div class="mobtab" role="presentation"><a href="#description" aria-controls="description" role="tab" data-toggle="tab" class="active">{{ 'products.product.description' | t }}</a></div>
      <div role="tabpanel" class="tab-pane active" id="description">
        <p>
          {% comment %} {{ product.description | split:"[video]" | first | strip_html }} {% endcomment %}
          {{ product.description | split:"[summary]" | first | split:"[video]" | first | split:"[tab]" | first | split:"[deal]" | first | split:"[affiliate]" | first }}
        </p>
      </div>
      {% if section.settings.show_reviews_tab %}
      <div class="mobtab" role="presentation"><a href="#reviews" aria-controls="reviews" role="tab" data-toggle="tab">{{ 'products.product.reviews' | t }}</a></div>
      <div role="tabpanel" class="tab-pane" id="reviews">
        <p>
          {% include 'product-review' %}
        </p>
      </div>
      {% endif %}
      {% if section.settings.show_third_tab %}
      <div class="mobtab" role="presentation"><a href="#data" aria-controls="data" role="tab" data-toggle="tab">{{ section.settings.third_tab_title }}</a></div>
      <div role="tabpanel" class="tab-pane" id="data">
        {{ section.settings.third_tab_text }}
      </div>
      {% endif %}
      {% if section.settings.show_tags_tab %}
      <div class="mobtab" role="presentation"><a href="#tags" aria-controls="tags" role="tab" data-toggle="tab">{{ 'products.product.tags' | t }}</a></div>
      <div role="tabpanel" class="tab-pane" id="tags">
        <p class="tags">
          <span>{{ 'products.product.tags' | t }}: 
            {% for tag in product.tags %}
            {% unless tag contains '_' %}
            <a href="/collections/all/{{ tag }}">{{ tag }}</a>
            {% unless forloop.last %}, {% endunless %}
            {% endunless %}
            {% endfor %}
          </span>
        </p>
      </div>
      {% endif %}
      {% if product.description contains '[tab]' %}
      <div class="mobtab" role="presentation"><a href="#tab" aria-controls="tab" role="tab" data-toggle="tab">{{ section.settings.custom_tab_title }}</a></div>
      <div role="tabpanel" class="tab-pane" id="tab">
        {{ product.description | split:'[tab]' | last | split :'[/tab]' | first }}
      </div>
      {% endif %}
    </div>
    {% endif %}
  </div>

  {% if section.settings.related_products_enable %}
  {% include 'related-products' %}
  {% endif %}

  {% if section.settings.recent_products_enable %}
  <div class="container">
    {% include 'recently-viewed' %}
  </div>
  {% endif %}

</div>

{% if section.settings.product_sticky_cart %}
{% include 'product-sticky-cart' %}
{% endif %}

{% assign product_page_layout =  section.settings.product_page_layout | strip %}
{% if product_page_layout contains 'vertical_thumbs' %}
{{ 'https://cdnjs.cloudflare.com/ajax/libs/bxslider/4.2.15/jquery.bxslider.min.css' | stylesheet_tag }}
<script src="//cdnjs.cloudflare.com/ajax/libs/bxslider/4.2.15/jquery.bxslider.min.js" defer="defer"></script>
{% endif %}
{% if product_page_layout == 'sticky_layout' %}
<script src="{{ 'jquery.sticky-kit.min.js' | asset_url }}" defer="defer"></script>
{% endif %}

<script type="text/javascript"><!--
  // related products	 
  $(document).ready(function() {
  $('.related-container').owlCarousel({
    nav: true,
    dots: false,
    navSpeed: 1000,
    lazyLoad:true,
    margin: 0,
    responsive:{
      0:{
        items: 1,
        nav: false,
        dots: true
      },
      480:{
        items: 2,
        nav: false,
        dots: true
      },
      768:{
        items: 3
      },
      992:{
        items: 4
      },
      1200:{
        items: 4
      }

    },
    onInitialized: function() {
      owlAction();
    },
    onTranslated: function() {
      owlAction();
    }	
  });
  function owlAction() {
    $(".related-container .owl-item").removeClass('first');
    $(".related-container .owl-item").removeClass('last');
    $(".related-container .owl-item").removeClass('before-active');
    $(".related-container .owl-item.active:first").addClass('first');
    $(".related-container .owl-item.active:last").addClass('last');
    $('.related-container .owl-item.active:first').prev().addClass('before-active');
  }
});
  //-->
</script>
<script>

  $(document).ready(function() {

    // vertical thumbs on product page
    {% assign product_page_layout =  section.settings.product_page_layout | strip %}
    {% if product_page_layout contains 'vertical_thumbs' %}
    $('.bxslider').bxSlider({
      mode: 'vertical',
      slideMargin: 5,
      infiniteLoop: false,
      hideControlOnEnd: true,
      adaptiveWidth: true,
      adaptiveHeight: true,
      minSlides: 6,
      moveSlides: 1
    }); 
    {% endif %}
    {% if product_page_layout == 'sticky_layout' %}
    window.addEventListener('DOMContentLoaded', function() {
      if ($(window).width() >= 768  ) {
        $("#desc").stick_in_parent();
      }
    });
    {% endif %}

    // review link to reviews
    var reviewsTimeout = setInterval(function() {
      if ($('.product-info-main .spr-badge-caption').length > 0) {
        $('.product-info-main .spr-badge-caption').on('click', function() {
          $('#reviews').addClass('active');
          $('html,body').animate({
            scrollTop: $('#reviews').offset().top
          },'400');
          $('.nav-tabs a[href="#reviews"]').tab('show');
        });
        clearInterval(reviewsTimeout);
      }
    }, 100);

  });

  {% if section.settings.enable_preload %}
  // Pre-loading product images, to avoid a lag when a thumbnail is clicked, or
  // when a variant is selected that has a variant image.
  Shopify.Image.preload({{ product.images | json }}, 'master');
  {% endif %}
  
  var selectCallback = function(variant, selector) {

    var $addToCart = $('#button-cart'),
        $addToCartBuy = $('#button-cart-buy'),
        $addToCartSticky = $('#button-cart-sticky'),
        $productPrice = $('#productPrice'),
        $comparePrice = $('#comparePrice'),
        $variantQuantity = $('#variantQuantity'),
        $quantityElements = $('.quantity-selector, label + .js-qty'),
        $addToCartText = $('#button-cart'),
        $featuredImage = $('#productPhotoImg');
    if (variant) {
      // Update variant image, if one is set
      // Call timber.switchImage function in shop.js
      if (variant.featured_image) {
        var newImg = variant.featured_image,
            el = $featuredImage[0];
        $(function() {
          Shopify.Image.switchImage(newImg, el, timber.switchImage);
          {% if section.settings.product_sticky_layout == true %}
          $('body,html').animate({scrollTop: 125}, 800);
          return false;
          {% endif %}
        });
      }

      // Select a valid variant if available
      if (variant.available) {
        // We have a valid product variant, so enable the submit button
        $addToCart.removeClass('disabled').prop('disabled', false);
        $addToCartBuy.removeClass('disabled').prop('disabled', false);
        $addToCartSticky.removeClass('disabled').prop('disabled', false);
        {% if template == 'product.pre-order' %}
        $addToCartText.html({{ 'products.product.pre_order' | t | json }});
        $addToCartSticky.html({{ 'products.product.pre_order' | t | json }});
        $addToCartBuy.html({{ 'products.product.pre_order' | t | json }});
        {% else %}
        $addToCartText.html({{ 'products.product.add_to_cart' | t | json }});
        $addToCartSticky.html({{ 'products.product.add_to_cart' | t | json }});
        $addToCartBuy.html({{ 'products.product.buy_now' | t | json }});
        {% endif %}
        $quantityElements.show();
        var inventory_level = (inv_qty[ variant.id ]);
        // Show how many items are left, if below 10
        {% if section.settings.product_quantity_message %}
        if (variant.inventory_management) {
          if (inventory_level < 10 && inventory_level > 0) {
            $variantQuantity.html({{ 'products.product.only_left' | t: count: '1' | json }}.replace('1', inventory_level)).addClass('is-visible');
          } else if (inventory_level <= 0 && variant.incoming) {
            $variantQuantity.html({{ 'products.product.will_not_ship_until' | t: date: '[date]' | json }}.replace('[date]', variant.next_incoming_date)).addClass('is-visible');
          } else {
            $variantQuantity.removeClass('is-visible');
          }
        }
        else {
          $variantQuantity.removeClass('is-visible');
        }
        {% endif %}
        if (variant.inventory_management) {
          if (inventory_level >= 10 ) {
            $('.ex-text').html('{{ 'products.product.in_stock' | t }}').css("color", "#66aa00");
                               } else if (inventory_level < 10 && inventory_level > 0) {
              $('.ex-text').html(inventory_level +' {{ 'products.product.in_stock' | t }}').css("color", "orange");
                                 } else {
                                 $('.ex-text').html('{{ 'products.product.out_stock' | t }}').css("color", "red");
                                                    }
                                                    }
                                                    } else {
              // Variant is sold out, disable the submit button
              $addToCart.addClass('disabled').prop('disabled', true);
              $addToCartBuy.addClass('disabled').prop('disabled', true);
              $addToCartSticky.addClass('disabled').prop('disabled', true);
              $addToCartText.html({{ 'products.product.sold_out' | t | json }});
              $addToCartBuy.html({{ 'products.product.sold_out' | t | json }});
              $addToCartSticky.html({{ 'products.product.sold_out' | t | json }});
              $variantQuantity.removeClass('is-visible');
              $('.ex-text').html('{{ 'products.product.out_stock' | t }}').css("color", "red");
                                 if (variant.incoming) {
                $variantQuantity.html({{ 'products.product.will_be_in_stock_after' | t: date: '[date]' | json }}.replace('[date]', variant.next_incoming_date)).addClass('is-visible');
              }
              else {
                $variantQuantity.addClass('hide');
              }
              $quantityElements.hide();
            }

            // Regardless of stock, update the product price
            Shopify.money_format = '{% if settings.currency_format == 'money_format' %}{{shop.money_format }}{% else %}{{shop.money_with_currency_format }}{% endif %}'; 

            //var customPrice = timber.formatMoney( Shopify.formatMoney(variant.price,Shopify.money_format) );
            var a11yPrice = Shopify.formatMoney(variant.price, Shopify.money_format);
            // var customPriceFormat = ' <span aria-hidden="true">' + customPrice + '</span>';
            var customPriceFormat = ' <span class="visually-hidden">' + a11yPrice + '</span>';
            $productPrice.html(customPriceFormat);

            // Also update and show the product's compare price if necessary
            {% if settings.product_show_compare_at_price %}
            if ( variant.compare_at_price > variant.price ) {
              var a11yComparePrice = Shopify.formatMoney(variant.compare_at_price, Shopify.money_format);
              comparePriceFormat = ' <span class="visually-hidden">' + a11yComparePrice + '</span>';
              $comparePrice.html(comparePriceFormat);
              $comparePrice.show();
            } else {
              $comparePrice.hide();
            }
            {% endif %}


          } else {
            // The variant doesn't exist, disable submit button.
            // This may be an error or notice that a specific variant is not available.
            $addToCart.addClass('disabled').prop('disabled', true);
            $addToCartBuy.addClass('disabled').prop('disabled', true);
            $addToCartSticky.addClass('disabled').prop('disabled', true);
            $addToCartText.html({{ 'products.product.unavailable' | t | json }});
            $addToCartBuy.html({{ 'products.product.unavailable' | t | json }});
            $addToCartSticky.html({{ 'products.product.unavailable' | t | json }});
            $variantQuantity.removeClass('is-visible');
            $quantityElements.hide();
          }
          if (variant && variant.featured_image) {
            var originalImage = $(".cloud-zoom.main-image img");
            var newImage = variant.featured_image;
            var element = originalImage[0];
            Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
              $(element).parents('a').attr('href', newImageSizedSrc);
              $(element).attr('src', newImageSizedSrc);       
              {% if settings.lazyloading_enable %} $(element).attr('data-src', newImageSizedSrc);  {% endif %}
              $('#light-box-position').val(newImage.position);
              $('.cloud-zoom, .cloud-zoom-gallery').CloudZoom();

            });
          }
          // BEGIN SWATCHES
          if (variant) {
            var form = $('#' + selector.domIdPrefix).closest('form');
            for (var i=0,length=variant.options.length; i<length; i++) {
              var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
              if (radioButton.size()) {
                radioButton.get(0).checked = true;
              }
            }
          }
          // END SWATCHES
          {% if section.settings.product_show_sku %}
          // SHOW/HIDE SKU
          if (variant) {
            $('.variant-sku').text(variant.sku);
            if(variant.sku != '')
              $('.skuvariant').show();
            else 
              $('.skuvariant').hide();
          } else {
            $('.variant-sku').empty();
          }
          {% endif %}
          {% if section.settings.product_show_barcode %}
          // SHOW/HIDE Barcode
          if (variant) {
            $('.variant-barcode').text(variant.barcode);
            if(variant.barcode != '')
              $('.barcodevariant').show();
            else 
              $('.barcodevariant').hide();
          } else {
            $('.variant-barcode').empty();
          }
          {% endif %}
          // Sticky Add to cart
          if (variant) {
            var select1 = $('#form_buy').find('select[name="productSelect"]').val();
            $('#form_buy_sticky').find('select[name="id"]').val($('#form_buy').find('select[name="id"]').val());

            $('#form_buy_sticky').find('.special-price .price').html(customPriceFormat);
            {% if settings.product_show_compare_at_price %}
            if ( variant.compare_at_price > variant.price ) {
              $('#form_buy_sticky').find('.old-price .price').html(comparePriceFormat);
            }
            {% endif %}

            if (variant.featured_image) {
              var originalImageSticky = $("#form_buy_sticky img");
              var newImage = variant.featured_image;
              var element = originalImageSticky[0];
              Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
                $(element).parents('a').attr('href', newImageSizedSrc);
                $(element).attr('src', newImageSizedSrc);
              	{% if settings.lazyloading_enable %} $(element).attr('data-src', newImageSizedSrc);  {% endif %}
              });
            }
          }

          {% if settings.show_multiple_currencies %}
          var defaultCurrency = '{{ settings.default_currency | default: shop.currency }}';
          var shopCurrency = '{{ shop.currency }}';
          var cookieCurrency = Currency.cookie.read();
          if (cookieCurrency == null) {
            Currency.convertAll(shopCurrency, defaultCurrency);
          } else {
            Currency.convertAll(shopCurrency, cookieCurrency);
          }    
          {% endif %}

        };

  jQuery(function($) {
          var product = {{ product | json }};
          {% if section.settings.product_quantity_message %}
          {% for variant in product.variants %}
          product.variants[{{ forloop.index0}}].incoming = {{ variant.incoming | default: false }};
          product.variants[{{ forloop.index0}}].next_incoming_date = {{ variant.next_incoming_date | date: format: 'month_day_year' | json }};
          {% endfor %}
          {% endif %}

          new Shopify.OptionSelectors('productSelect', {
            product: product,
            onVariantSelected: selectCallback,
            enableHistoryState: true
          });

          // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
          {% if product.options.size == 1 and product.options.first != 'Title' %}
          $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first | escape }}</label>');
          {% endif %}
          /* Hide selectors if we only have 1 variant and its title contains 'Default'. */
          {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
          $('.selector-wrapper').hide();
          // Sticky Add to cart
          $("#title").removeClass("hidden-sm hidden-xs").addClass( "col-7" );
          {% else %}
          $('#variantBreak').removeClass('hr--clear');
          {% endif %}
          //$('.selector-wrapper').hide();
        }); 
</script>
{% if section.settings.show_variant_swatches != 'false' %}
{% include 'linked-options' %}
{% endif %}